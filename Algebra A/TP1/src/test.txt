int inverso_modular(mpz_t r, const mpz_t a, const mpz_t n) {
    mpz_t g, x, y;
    mpz_inits(g, x, y, NULL);
    mdc_estendido(g, x, y, a, n);

    if(mpz_cmp_ui(g, 1) == 0) {
        mpz_set(r, x);
        return 1;
    }
    else {
        mpz_set_si(r, -1);
        return 0;
    }
}


    mpz_t r, a, n, r1;
    int k;
    mpz_inits(r, a, n, r1, NULL);

    mpz_set_si(a, 3);
    mpz_set_si(n, 7);

    k = inverso_modular(r, a, n);

    gmp_printf("k == %d e  %Zd * %Zd = 1(mod %Zd)\n", k, a, r, n);
    k = mpz_invert(r1, a, n);
    gmp_printf("k == %d e  %Zd * %Zd = 1(mod %Zd)\n", k, a, r1, n);



    mpz_t g, x, y, a, b;
    mpz_inits(g, x, y, a, b, NULL);
    
    gmp_scanf("%Zd %Zd", a, b);
    
    mdc_estendido(g, x, y, a, b);
    
    gmp_printf("(%Zd, %Zd, %Zd)\n", g, x, y);

    mpz_gcdext(g, x, y, a, b);

    gmp_printf("(%Zd, %Zd, %Zd)\n", g, x, y);